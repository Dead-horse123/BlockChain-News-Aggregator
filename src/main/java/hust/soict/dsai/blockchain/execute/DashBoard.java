/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hust.soict.dsai.blockchain.execute;

import hust.soict.dsai.blockchain.connect.SQL;
import hust.soict.dsai.blockchain.connect.ConnectJDBC;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvException;
import com.opencsv.exceptions.CsvValidationException;
import hust.soict.dsai.blockchain.engine.CSVHandler;
import hust.soict.dsai.blockchain.engine.FilePathsManager;
import hust.soict.dsai.blockchain.engine.RunPython;
import hust.soict.dsai.blockchain.graph.chart.ModelChart;
import hust.soict.dsai.blockchain.login.Login;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import static hust.soict.dsai.blockchain.login.Login.login;
import hust.soict.dsai.blockchain.login.User;
import java.io.BufferedReader;
import java.util.ArrayList;
import javax.swing.JTable;
import java.awt.event.ItemEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.JLabel;

public class DashBoard extends javax.swing.JFrame {

    private static boolean admin = false;
    private static boolean manager = false;
    private static int currentPercentage = 0;
    private static boolean loading;
    public static boolean SQLSelected = false;
    private static boolean searchMainButtonChoose, trendingButtonChoose, menuButtonChoose, exitAppButtonChoose, importDataButtonChoose, managerButtonChoose, dataButtonChoose, settingButtonChoose = false;
    private int currentPage = 1;
    private float time = 0;
    private static boolean smartSearch = true;
    private static boolean filter = false;

    public DashBoard() {
        initComponents();
        //search bar
        searchTextSub.setEnabled(false);
        searchTextSub.setVisible(false);
        this.setTitle("Block Chain");

        hostNameTextField.setText(ConnectJDBC.getHostName());
        databaseNameTextField.setText(ConnectJDBC.getDatabaseName());
        userNameTextField.setText(ConnectJDBC.getUsername());
        sqlPasswordTextField.setText(ConnectJDBC.getPassword());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserPopup = new javax.swing.JDialog();
        fileChooserForInportData = new javax.swing.JFileChooser();
        loginPane = new javax.swing.JFrame();
        loginBackground = new javax.swing.JPanel();
        exitButton = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usernameText = new javax.swing.JLabel();
        passwordText = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        loginButton = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loadingPopup = new javax.swing.JFrame();
        loadingBackground = new javax.swing.JPanel();
        waitText = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        text = new javax.swing.JLabel();
        addUserPane = new javax.swing.JFrame();
        backgroundForAddUserPane = new javax.swing.JPanel();
        exitButtonForAddUserPane = new javax.swing.JPanel();
        xCloseButtonLabel = new javax.swing.JLabel();
        usernameTextForAdd = new javax.swing.JLabel();
        passwordTextForAdd = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JTextField();
        addButtonForUser = new javax.swing.JPanel();
        confirmAddUserLabel = new javax.swing.JLabel();
        roleText = new javax.swing.JLabel();
        comboBoxForRole = new javax.swing.JComboBox<>();
        duplicateUserCaution = new javax.swing.JLabel();
        popupData = new javax.swing.JFrame();
        backgroundForPopupData = new hust.soict.dsai.blockchain.graph.panel.PanelShadow();
        titlePopupData = new javax.swing.JLabel();
        exitPopupData = new javax.swing.JLabel();
        linkPopupData = new javax.swing.JLabel();
        websiteSourcePopupData = new javax.swing.JLabel();
        idPopupData = new javax.swing.JLabel();
        typePopupData = new javax.swing.JLabel();
        summaryPopupData = new javax.swing.JLabel();
        datePopupData = new javax.swing.JLabel();
        tagsPopupData = new javax.swing.JLabel();
        authorPopupData = new javax.swing.JLabel();
        categoryPopupData = new javax.swing.JLabel();
        contentScrollPane = new javax.swing.JScrollPane();
        contentPopupData = new javax.swing.JTextArea();
        entitiesPopupData = new javax.swing.JLabel();
        topBar = new javax.swing.JPanel();
        loginText = new javax.swing.JLabel();
        appName = new javax.swing.JLabel();
        colorNextToName = new javax.swing.JLabel();
        searchIcon = new javax.swing.JLabel();
        sideBar = new javax.swing.JLabel();
        searchTextSub = new javax.swing.JTextField();
        logoutButton = new javax.swing.JLabel();
        menu = new javax.swing.JPanel();
        exitAppButton = new javax.swing.JPanel();
        exitText = new javax.swing.JLabel();
        importDataButton = new javax.swing.JPanel();
        importDataText = new javax.swing.JLabel();
        managerButton = new javax.swing.JPanel();
        managerText = new javax.swing.JLabel();
        dataButton = new javax.swing.JPanel();
        dataText = new javax.swing.JLabel();
        trendingButton = new javax.swing.JPanel();
        trendingText = new javax.swing.JLabel();
        searchMainButton = new javax.swing.JPanel();
        searchMainText = new javax.swing.JLabel();
        settingButton = new javax.swing.JPanel();
        settingText = new javax.swing.JLabel();
        menuButton = new javax.swing.JPanel();
        menuText = new javax.swing.JLabel();
        menuItems = new javax.swing.JTabbedPane();
        menuPane = new javax.swing.JPanel();
        background = new hust.soict.dsai.blockchain.shape.SearchBackground();
        searchingPane = new javax.swing.JPanel();
        searchingPaneBackground = new hust.soict.dsai.blockchain.shape.MenuBackground();
        searchBarMainBackground = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        searchTextMain = new javax.swing.JTextField();
        switchButtonForChooseSearchMode = new javax.swing.JPanel();
        whitePart = new javax.swing.JPanel();
        bluePart = new javax.swing.JPanel();
        smartSearchOption = new javax.swing.JLabel();
        exactSearchOption = new javax.swing.JLabel();
        filterBar = new hust.soict.dsai.blockchain.graph.panel.PanelShadow();
        categoriesText = new javax.swing.JLabel();
        categoriesFilterText = new javax.swing.JTextField();
        confirmButton = new javax.swing.JPanel();
        confirmLabel = new javax.swing.JLabel();
        tagsText = new javax.swing.JLabel();
        tagsFilterText = new javax.swing.JTextField();
        chooseTag = new javax.swing.JComboBox<>();
        chooseCategories = new javax.swing.JComboBox<>();
        trendingPane = new javax.swing.JPanel();
        barChart = new hust.soict.dsai.blockchain.graph.chart.barchart.BarChart();
        inputTrendingPanel = new hust.soict.dsai.blockchain.graph.panel.PanelShadow();
        startDate = new javax.swing.JLabel();
        endDate = new javax.swing.JLabel();
        panelRoundStartDate = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        startDateInput = new javax.swing.JTextField();
        panelRoundEndDate = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        endDateInput = new javax.swing.JTextField();
        startFind = new javax.swing.JButton();
        topTextLabel = new javax.swing.JLabel();
        panelRoundTop = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        topInput = new javax.swing.JTextField();
        optionTextLabel = new javax.swing.JLabel();
        option = new javax.swing.JComboBox<>();
        importData = new javax.swing.JPanel();
        chooseFileToImport = new javax.swing.JFileChooser();
        managerPane = new javax.swing.JPanel();
        managerScrollPane = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        deleteUserPanel = new javax.swing.JPanel();
        deleteUserLabel = new javax.swing.JLabel();
        addUserPanel = new javax.swing.JPanel();
        addUserLabel = new javax.swing.JLabel();
        dataPanel = new javax.swing.JPanel();
        dataTableSrcollPane = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        topBackground = new hust.soict.dsai.blockchain.graph.panel.PanelShadow();
        textChangeBox = new javax.swing.JTextField();
        dataTextLabel = new javax.swing.JLabel();
        exportToCSVButton = new javax.swing.JPanel();
        exportToCSVLabel = new javax.swing.JLabel();
        deleteDataButtonPanel = new javax.swing.JPanel();
        deleteDataButtonLabel = new javax.swing.JLabel();
        settingPanel = new javax.swing.JPanel();
        sqlInformation = new javax.swing.JPanel();
        hostNameTextField = new javax.swing.JTextField();
        databaseNameTextField = new javax.swing.JTextField();
        userNameTextField = new javax.swing.JTextField();
        sqlPasswordTextField = new javax.swing.JTextField();
        hostText = new javax.swing.JLabel();
        databaseNameText = new javax.swing.JLabel();
        sqlUsernameText = new javax.swing.JLabel();
        sqlPasswordText = new javax.swing.JLabel();
        switchButtonForSQL = new javax.swing.JPanel();
        sqlWhitePart = new javax.swing.JPanel();
        sqlBlackPart = new javax.swing.JPanel();
        sqlInformationLabel = new javax.swing.JLabel();
        searchingResultsDisplay = new javax.swing.JPanel();
        searchingResultsDisplayBackground = new hust.soict.dsai.blockchain.graph.panel.PanelShadow();
        resulst2 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title2 = new javax.swing.JLabel();
        summary2 = new javax.swing.JLabel();
        author2 = new javax.swing.JLabel();
        date2 = new javax.swing.JLabel();
        result3 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title3 = new javax.swing.JLabel();
        summary3 = new javax.swing.JLabel();
        author3 = new javax.swing.JLabel();
        date3 = new javax.swing.JLabel();
        result1 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title1 = new javax.swing.JLabel();
        summary1 = new javax.swing.JLabel();
        author1 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        result4 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title4 = new javax.swing.JLabel();
        summary4 = new javax.swing.JLabel();
        author4 = new javax.swing.JLabel();
        date4 = new javax.swing.JLabel();
        results6 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title6 = new javax.swing.JLabel();
        summary6 = new javax.swing.JLabel();
        author6 = new javax.swing.JLabel();
        date6 = new javax.swing.JLabel();
        result5 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title5 = new javax.swing.JLabel();
        summary5 = new javax.swing.JLabel();
        author5 = new javax.swing.JLabel();
        date5 = new javax.swing.JLabel();
        result8 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title8 = new javax.swing.JLabel();
        summary8 = new javax.swing.JLabel();
        author8 = new javax.swing.JLabel();
        date8 = new javax.swing.JLabel();
        results7 = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        title7 = new javax.swing.JLabel();
        summary7 = new javax.swing.JLabel();
        author7 = new javax.swing.JLabel();
        date7 = new javax.swing.JLabel();
        colorPanel = new javax.swing.JPanel();
        pageNumberButton = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        pageNumber = new javax.swing.JLabel();
        previousButton = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        previousLabel = new javax.swing.JLabel();
        nextButton = new hust.soict.dsai.blockchain.graph.panel.PanelRound();
        nextLabel = new javax.swing.JLabel();
        timeProcessing = new javax.swing.JLabel();
        searchingResultsPanel = new javax.swing.JPanel();
        searchingResultsScrollTablePanelDataPane = new javax.swing.JScrollPane();
        searchingResultsTable = new javax.swing.JTable();
        topBackgroundForSearchingResultsPanel = new hust.soict.dsai.blockchain.graph.panel.PanelShadow();
        textLabel = new javax.swing.JLabel();
        textField = new javax.swing.JTextField();

        fileChooserForInportData.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        fileChooserForInportData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserForInportDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fileChooserPopupLayout = new javax.swing.GroupLayout(fileChooserPopup.getContentPane());
        fileChooserPopup.getContentPane().setLayout(fileChooserPopupLayout);
        fileChooserPopupLayout.setHorizontalGroup(
            fileChooserPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileChooserPopupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileChooserForInportData, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fileChooserPopupLayout.setVerticalGroup(
            fileChooserPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileChooserPopupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileChooserForInportData, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loginPane.setUndecorated(true);

        loginBackground.setBackground(new java.awt.Color(204, 204, 204));
        loginBackground.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        exitButton.setBackground(new java.awt.Color(255, 255, 255));
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");

        javax.swing.GroupLayout exitButtonLayout = new javax.swing.GroupLayout(exitButton);
        exitButton.setLayout(exitButtonLayout);
        exitButtonLayout.setHorizontalGroup(
            exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        exitButtonLayout.setVerticalGroup(
            exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        usernameText.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        usernameText.setText("Username");

        passwordText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordText.setText("Password");

        username.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12)); // NOI18N

        password.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12)); // NOI18N

        loginButton.setBackground(new java.awt.Color(255, 255, 255));
        loginButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginButtonMouseExited(evt);
            }
        });

        loginLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        loginLabel.setForeground(new java.awt.Color(255, 153, 0));
        loginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginLabel.setText("Login");

        javax.swing.GroupLayout loginButtonLayout = new javax.swing.GroupLayout(loginButton);
        loginButton.setLayout(loginButtonLayout);
        loginButtonLayout.setHorizontalGroup(
            loginButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginButtonLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        loginButtonLayout.setVerticalGroup(
            loginButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout loginBackgroundLayout = new javax.swing.GroupLayout(loginBackground);
        loginBackground.setLayout(loginBackgroundLayout);
        loginBackgroundLayout.setHorizontalGroup(
            loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginBackgroundLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(loginBackgroundLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(username)
                        .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        loginBackgroundLayout.setVerticalGroup(
            loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginBackgroundLayout.createSequentialGroup()
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameText)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordText)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout loginPaneLayout = new javax.swing.GroupLayout(loginPane.getContentPane());
        loginPane.getContentPane().setLayout(loginPaneLayout);
        loginPaneLayout.setHorizontalGroup(
            loginPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        loginPaneLayout.setVerticalGroup(
            loginPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPaneLayout.createSequentialGroup()
                .addComponent(loginBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        loadingPopup.setUndecorated(true);

        loadingBackground.setBackground(new java.awt.Color(204, 204, 255));

        waitText.setText("Please wait ...");

        text.setText("/");

        javax.swing.GroupLayout loadingBackgroundLayout = new javax.swing.GroupLayout(loadingBackground);
        loadingBackground.setLayout(loadingBackgroundLayout);
        loadingBackgroundLayout.setHorizontalGroup(
            loadingBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(loadingBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text)
                    .addComponent(waitText, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loadingBackgroundLayout.setVerticalGroup(
            loadingBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingBackgroundLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(waitText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loadingPopupLayout = new javax.swing.GroupLayout(loadingPopup.getContentPane());
        loadingPopup.getContentPane().setLayout(loadingPopupLayout);
        loadingPopupLayout.setHorizontalGroup(
            loadingPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadingBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        loadingPopupLayout.setVerticalGroup(
            loadingPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadingBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        addUserPane.setUndecorated(true);

        backgroundForAddUserPane.setBackground(new java.awt.Color(204, 204, 204));
        backgroundForAddUserPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        exitButtonForAddUserPane.setBackground(new java.awt.Color(255, 255, 255));
        exitButtonForAddUserPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButtonForAddUserPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonForAddUserPaneMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonForAddUserPaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonForAddUserPaneMouseExited(evt);
            }
        });

        xCloseButtonLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        xCloseButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        xCloseButtonLabel.setText("X");

        javax.swing.GroupLayout exitButtonForAddUserPaneLayout = new javax.swing.GroupLayout(exitButtonForAddUserPane);
        exitButtonForAddUserPane.setLayout(exitButtonForAddUserPaneLayout);
        exitButtonForAddUserPaneLayout.setHorizontalGroup(
            exitButtonForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitButtonForAddUserPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(xCloseButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        exitButtonForAddUserPaneLayout.setVerticalGroup(
            exitButtonForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xCloseButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        usernameTextForAdd.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        usernameTextForAdd.setText("Username");

        passwordTextForAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordTextForAdd.setText("Password");

        usernameTextField.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12)); // NOI18N

        passwordTextField.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12)); // NOI18N

        addButtonForUser.setBackground(new java.awt.Color(0, 153, 51));
        addButtonForUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addButtonForUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButtonForUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonForUserMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonForUserMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addButtonForUserMouseExited(evt);
            }
        });

        confirmAddUserLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        confirmAddUserLabel.setForeground(new java.awt.Color(255, 153, 0));
        confirmAddUserLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmAddUserLabel.setText("Add User");

        javax.swing.GroupLayout addButtonForUserLayout = new javax.swing.GroupLayout(addButtonForUser);
        addButtonForUser.setLayout(addButtonForUserLayout);
        addButtonForUserLayout.setHorizontalGroup(
            addButtonForUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addButtonForUserLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(confirmAddUserLabel)
                .addGap(24, 24, 24))
        );
        addButtonForUserLayout.setVerticalGroup(
            addButtonForUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addButtonForUserLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmAddUserLabel)
                .addContainerGap())
        );

        roleText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roleText.setText("Role");

        comboBoxForRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Admin" }));

        duplicateUserCaution.setFont(new java.awt.Font("Segoe UI Historic", 2, 12)); // NOI18N
        duplicateUserCaution.setForeground(new java.awt.Color(255, 0, 0));
        duplicateUserCaution.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        duplicateUserCaution.setText("User already in database");

        javax.swing.GroupLayout backgroundForAddUserPaneLayout = new javax.swing.GroupLayout(backgroundForAddUserPane);
        backgroundForAddUserPane.setLayout(backgroundForAddUserPaneLayout);
        backgroundForAddUserPaneLayout.setHorizontalGroup(
            backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundForAddUserPaneLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roleText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameTextForAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordTextForAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButtonForUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(usernameTextField)
                        .addComponent(passwordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .addComponent(comboBoxForRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(backgroundForAddUserPaneLayout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(duplicateUserCaution, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(exitButtonForAddUserPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        backgroundForAddUserPaneLayout.setVerticalGroup(
            backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundForAddUserPaneLayout.createSequentialGroup()
                .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exitButtonForAddUserPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duplicateUserCaution))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextForAdd)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextForAdd)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(backgroundForAddUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleText)
                    .addComponent(comboBoxForRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(addButtonForUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        duplicateUserCaution.setVisible(false);

        javax.swing.GroupLayout addUserPaneLayout = new javax.swing.GroupLayout(addUserPane.getContentPane());
        addUserPane.getContentPane().setLayout(addUserPaneLayout);
        addUserPaneLayout.setHorizontalGroup(
            addUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundForAddUserPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addUserPaneLayout.setVerticalGroup(
            addUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundForAddUserPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        popupData.setUndecorated(true);

        backgroundForPopupData.setBackground(new java.awt.Color(51, 255, 255));
        backgroundForPopupData.setColorGradient(new java.awt.Color(255, 153, 255));

        titlePopupData.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        titlePopupData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlePopupData.setText("Title");

        exitPopupData.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        exitPopupData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitPopupData.setText("X");
        exitPopupData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitPopupData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitPopupDataMouseClicked(evt);
            }
        });

        linkPopupData.setText("Link");

        websiteSourcePopupData.setText("Website Source");

        idPopupData.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        idPopupData.setText("ID");

        typePopupData.setText("Type");

        summaryPopupData.setText("Summary");

        datePopupData.setText("Date");

        tagsPopupData.setText("Tags");
        tagsPopupData.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        authorPopupData.setText("Author");

        categoryPopupData.setText("Category");
        categoryPopupData.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        contentPopupData.setEditable(false);
        contentPopupData.setColumns(20);
        contentPopupData.setLineWrap(true);
        contentPopupData.setRows(5);
        contentPopupData.setText("No content");
        contentScrollPane.setViewportView(contentPopupData);

        entitiesPopupData.setText("Entities");

        javax.swing.GroupLayout backgroundForPopupDataLayout = new javax.swing.GroupLayout(backgroundForPopupData);
        backgroundForPopupData.setLayout(backgroundForPopupDataLayout);
        backgroundForPopupDataLayout.setHorizontalGroup(
            backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                .addGroup(backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(idPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(websiteSourcePopupData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                                .addComponent(linkPopupData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(49, 49, 49))
                            .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                                .addComponent(contentScrollPane)
                                .addGap(13, 13, 13))
                            .addComponent(datePopupData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(authorPopupData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                                .addComponent(typePopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(tagsPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(categoryPopupData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(summaryPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(entitiesPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addComponent(exitPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundForPopupDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titlePopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        backgroundForPopupDataLayout.setVerticalGroup(
            backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                .addGroup(backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundForPopupDataLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(idPopupData))
                    .addComponent(exitPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titlePopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(linkPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(websiteSourcePopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundForPopupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tagsPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(typePopupData))
                    .addComponent(categoryPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addComponent(authorPopupData)
                .addGap(18, 18, 18)
                .addComponent(datePopupData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summaryPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entitiesPopupData, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout popupDataLayout = new javax.swing.GroupLayout(popupData.getContentPane());
        popupData.getContentPane().setLayout(popupDataLayout);
        popupDataLayout.setHorizontalGroup(
            popupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popupDataLayout.createSequentialGroup()
                .addComponent(backgroundForPopupData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        popupDataLayout.setVerticalGroup(
            popupDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundForPopupData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topBar.setBackground(java.awt.Color.darkGray);
        topBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        topBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginText.setForeground(new java.awt.Color(255, 255, 255));
        loginText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/male_user_50px.png"))); // NOI18N
        loginText.setText("Login");
        loginText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginTextMouseClicked(evt);
            }
        });
        topBar.add(loginText, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 0, 200, 90));

        appName.setBackground(new java.awt.Color(255, 255, 255));
        appName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        appName.setForeground(new java.awt.Color(255, 255, 255));
        appName.setText("BOOGLE");
        topBar.add(appName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 120, 30));

        colorNextToName.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        colorNextToName.setText("I");
        topBar.add(colorNextToName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 20, 30));

        searchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search_26px.png"))); // NOI18N
        searchIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchIconMouseClicked(evt);
            }
        });
        topBar.add(searchIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, 30, 30));
        searchIcon.getAccessibleContext().setAccessibleName("");

        sideBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_menu_48px_1.png"))); // NOI18N
        sideBar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sideBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sideBarMouseClicked(evt);
            }
        });
        topBar.add(sideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 50, 50));

        searchTextSub.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12)); // NOI18N
        searchTextSub.setText("Search for something");
        searchTextSub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextSubMouseClicked(evt);
            }
        });
        searchTextSub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextSubKeyPressed(evt);
            }
        });
        topBar.add(searchTextSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 500, 30));

        logoutButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutButton.setText("Log out");
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });
        topBar.add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, 70, 40));
        logoutButton.setVisible(false);

        getContentPane().add(topBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        menu.setBackground(new java.awt.Color(51, 51, 51));
        menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitAppButton.setBackground(new java.awt.Color(51, 51, 51));
        exitAppButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitAppButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitAppButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitAppButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitAppButtonMouseExited(evt);
            }
        });
        exitAppButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitText.setForeground(new java.awt.Color(204, 204, 204));
        exitText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-exit-24 (2).png"))); // NOI18N
        exitText.setText("Exit");
        exitAppButton.add(exitText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 190, 30));

        menu.add(exitAppButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 240, 70));

        importDataButton.setBackground(new java.awt.Color(51, 51, 51));
        importDataButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        importDataButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importDataButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                importDataButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                importDataButtonMouseExited(evt);
            }
        });
        importDataButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        importDataText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        importDataText.setForeground(new java.awt.Color(204, 204, 204));
        importDataText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit_property_24px.png"))); // NOI18N
        importDataText.setText("Import Data");
        importDataButton.add(importDataText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 170, 30));

        menu.add(importDataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 240, 70));
        importDataButton.setVisible(false);

        managerButton.setBackground(new java.awt.Color(51, 51, 51));
        managerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        managerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managerButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                managerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                managerButtonMouseExited(evt);
            }
        });
        managerButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        managerText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        managerText.setForeground(new java.awt.Color(204, 204, 204));
        managerText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_user_group_woman_man_24px.png"))); // NOI18N
        managerText.setText("Add Manager");
        managerButton.add(managerText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 180, 30));

        menu.add(managerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 240, 70));
        managerButton.setVisible(false);

        dataButton.setBackground(new java.awt.Color(51, 51, 51));
        dataButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dataButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dataButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dataButtonMouseExited(evt);
            }
        });
        dataButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dataText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dataText.setForeground(new java.awt.Color(204, 204, 204));
        dataText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/grid_24px.png"))); // NOI18N
        dataText.setText("Data");
        dataButton.add(dataText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 190, 30));

        menu.add(dataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 240, 70));
        dataButton.getAccessibleContext().setAccessibleName("");

        trendingButton.setBackground(new java.awt.Color(51, 51, 51));
        trendingButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        trendingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trendingButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                trendingButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                trendingButtonMouseExited(evt);
            }
        });
        trendingButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        trendingText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        trendingText.setForeground(new java.awt.Color(204, 204, 204));
        trendingText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/account_24px.png"))); // NOI18N
        trendingText.setText("Trending");
        trendingButton.add(trendingText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 130, 30));

        menu.add(trendingButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 240, 70));

        searchMainButton.setBackground(new java.awt.Color(51, 51, 51));
        searchMainButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchMainButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMainButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchMainButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchMainButtonMouseExited(evt);
            }
        });
        searchMainButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchMainText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchMainText.setForeground(new java.awt.Color(204, 204, 204));
        searchMainText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search_26px.png"))); // NOI18N
        searchMainText.setText("Search");
        searchMainButton.add(searchMainText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 110, 30));

        menu.add(searchMainButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 240, 70));

        settingButton.setBackground(new java.awt.Color(51, 51, 51));
        settingButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingButtonMouseExited(evt);
            }
        });
        settingButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        settingText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        settingText.setForeground(new java.awt.Color(204, 204, 204));
        settingText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-setting-24 (2).png"))); // NOI18N
        settingText.setText("Setting");
        settingButton.add(settingText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 180, 30));

        menu.add(settingButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 240, 70));

        menuButton.setBackground(new java.awt.Color(51, 51, 51));
        menuButton.setForeground(new java.awt.Color(255, 255, 255));
        menuButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuButtonMouseExited(evt);
            }
        });
        menuButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        menuText.setForeground(new java.awt.Color(204, 204, 204));
        menuText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        menuText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home_24px.png"))); // NOI18N
        menuText.setText("Menu");
        menuButton.add(menuText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 130, 30));

        menu.add(menuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 240, 70));

        getContentPane().add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 240, 620));

        menuPane.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 715, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menuPaneLayout = new javax.swing.GroupLayout(menuPane);
        menuPane.setLayout(menuPaneLayout);
        menuPaneLayout.setHorizontalGroup(
            menuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuPaneLayout.setVerticalGroup(
            menuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        menuItems.addTab("tab5", menuPane);

        searchingPane.setBackground(new java.awt.Color(255, 255, 255));

        searchBarMainBackground.setBackground(new java.awt.Color(255, 255, 255));
        searchBarMainBackground.setRoundBottomLeft(50);
        searchBarMainBackground.setRoundBottomRight(50);
        searchBarMainBackground.setRoundTopLeft(50);
        searchBarMainBackground.setRoundTopRight(50);

        searchTextMain.setBorder(null);
        searchTextMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextMainMouseClicked(evt);
            }
        });
        searchTextMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextMainActionPerformed(evt);
            }
        });
        searchTextMain.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextMainKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout searchBarMainBackgroundLayout = new javax.swing.GroupLayout(searchBarMainBackground);
        searchBarMainBackground.setLayout(searchBarMainBackgroundLayout);
        searchBarMainBackgroundLayout.setHorizontalGroup(
            searchBarMainBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchBarMainBackgroundLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(searchTextMain, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        searchBarMainBackgroundLayout.setVerticalGroup(
            searchBarMainBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchTextMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        switchButtonForChooseSearchMode.setBackground(new java.awt.Color(255, 255, 255));
        switchButtonForChooseSearchMode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        switchButtonForChooseSearchMode.setPreferredSize(new java.awt.Dimension(64, 32));
        switchButtonForChooseSearchMode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchButtonForChooseSearchModeMouseClicked(evt);
            }
        });

        whitePart.setBackground(new java.awt.Color(255, 255, 255));
        whitePart.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout whitePartLayout = new javax.swing.GroupLayout(whitePart);
        whitePart.setLayout(whitePartLayout);
        whitePartLayout.setHorizontalGroup(
            whitePartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );
        whitePartLayout.setVerticalGroup(
            whitePartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        bluePart.setBackground(new java.awt.Color(0, 51, 204));
        bluePart.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout bluePartLayout = new javax.swing.GroupLayout(bluePart);
        bluePart.setLayout(bluePartLayout);
        bluePartLayout.setHorizontalGroup(
            bluePartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );
        bluePartLayout.setVerticalGroup(
            bluePartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout switchButtonForChooseSearchModeLayout = new javax.swing.GroupLayout(switchButtonForChooseSearchMode);
        switchButtonForChooseSearchMode.setLayout(switchButtonForChooseSearchModeLayout);
        switchButtonForChooseSearchModeLayout.setHorizontalGroup(
            switchButtonForChooseSearchModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(switchButtonForChooseSearchModeLayout.createSequentialGroup()
                .addComponent(whitePart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bluePart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        switchButtonForChooseSearchModeLayout.setVerticalGroup(
            switchButtonForChooseSearchModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bluePart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(whitePart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        smartSearchOption.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        smartSearchOption.setForeground(new java.awt.Color(255, 255, 255));
        smartSearchOption.setText("Smart search");

        exactSearchOption.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        exactSearchOption.setForeground(new java.awt.Color(255, 255, 255));
        exactSearchOption.setText("Exact search");

        filterBar.setBackground(new java.awt.Color(204, 255, 255));
        filterBar.setColorGradient(new java.awt.Color(255, 204, 255));

        categoriesText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        categoriesText.setText("Catergories");

        categoriesFilterText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesFilterTextActionPerformed(evt);
            }
        });

        confirmButton.setBackground(new java.awt.Color(255, 255, 255));
        confirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmButtonMouseExited(evt);
            }
        });

        confirmLabel.setBackground(new java.awt.Color(255, 255, 255));
        confirmLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmLabel.setText("Confirm");

        javax.swing.GroupLayout confirmButtonLayout = new javax.swing.GroupLayout(confirmButton);
        confirmButton.setLayout(confirmButtonLayout);
        confirmButtonLayout.setHorizontalGroup(
            confirmButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confirmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
        );
        confirmButtonLayout.setVerticalGroup(
            confirmButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confirmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
        );

        tagsText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tagsText.setText("Tags");

        tagsFilterText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tagsFilterTextActionPerformed(evt);
            }
        });

        chooseTag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        chooseTag.setBorder(null);
        chooseTag.setMaximumSize(new java.awt.Dimension(72, 22));
        chooseTag.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chooseTagItemStateChanged(evt);
            }
        });
        chooseTag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseTagMouseClicked(evt);
            }
        });

        chooseCategories.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        chooseCategories.setBorder(null);
        chooseCategories.setMaximumSize(new java.awt.Dimension(72, 22));
        chooseCategories.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chooseCategoriesItemStateChanged(evt);
            }
        });
        chooseCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseCategoriesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout filterBarLayout = new javax.swing.GroupLayout(filterBar);
        filterBar.setLayout(filterBarLayout);
        filterBarLayout.setHorizontalGroup(
            filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterBarLayout.createSequentialGroup()
                .addContainerGap(275, Short.MAX_VALUE)
                .addGroup(filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tagsText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoriesText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterBarLayout.createSequentialGroup()
                        .addComponent(categoriesFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filterBarLayout.createSequentialGroup()
                        .addComponent(tagsFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseTag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(257, Short.MAX_VALUE))
        );
        filterBarLayout.setVerticalGroup(
            filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterBarLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagsText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tagsFilterText)
                    .addComponent(chooseTag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterBarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filterBarLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(filterBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoriesText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoriesFilterText)
                            .addComponent(chooseCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout searchingPaneBackgroundLayout = new javax.swing.GroupLayout(searchingPaneBackground);
        searchingPaneBackground.setLayout(searchingPaneBackgroundLayout);
        searchingPaneBackgroundLayout.setHorizontalGroup(
            searchingPaneBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filterBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(searchingPaneBackgroundLayout.createSequentialGroup()
                .addContainerGap(411, Short.MAX_VALUE)
                .addComponent(smartSearchOption, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(switchButtonForChooseSearchMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(exactSearchOption, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(387, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchingPaneBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchBarMainBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchingPaneBackgroundLayout.setVerticalGroup(
            searchingPaneBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchingPaneBackgroundLayout.createSequentialGroup()
                .addContainerGap(338, Short.MAX_VALUE)
                .addComponent(searchBarMainBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchingPaneBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(switchButtonForChooseSearchMode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(smartSearchOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exactSearchOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(188, 188, 188)
                .addComponent(filterBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout searchingPaneLayout = new javax.swing.GroupLayout(searchingPane);
        searchingPane.setLayout(searchingPaneLayout);
        searchingPaneLayout.setHorizontalGroup(
            searchingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchingPaneBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        searchingPaneLayout.setVerticalGroup(
            searchingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchingPaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(searchingPaneBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        menuItems.addTab("tab2", searchingPane);

        trendingPane.setBackground(new java.awt.Color(255, 255, 255));

        inputTrendingPanel.setBackground(new java.awt.Color(204, 204, 204));
        inputTrendingPanel.setColorGradient(new java.awt.Color(204, 204, 255));

        startDate.setText("Start date");

        endDate.setText("End date");

        panelRoundStartDate.setBackground(new java.awt.Color(255, 255, 255));
        panelRoundStartDate.setRoundBottomLeft(20);
        panelRoundStartDate.setRoundBottomRight(20);
        panelRoundStartDate.setRoundTopLeft(20);
        panelRoundStartDate.setRoundTopRight(20);

        startDateInput.setText("YYYY-MM-DD");
        startDateInput.setBorder(null);
        startDateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRoundStartDateLayout = new javax.swing.GroupLayout(panelRoundStartDate);
        panelRoundStartDate.setLayout(panelRoundStartDateLayout);
        panelRoundStartDateLayout.setHorizontalGroup(
            panelRoundStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRoundStartDateLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(startDateInput)
                .addContainerGap())
        );
        panelRoundStartDateLayout.setVerticalGroup(
            panelRoundStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startDateInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        panelRoundEndDate.setBackground(new java.awt.Color(255, 255, 255));
        panelRoundEndDate.setRoundBottomLeft(20);
        panelRoundEndDate.setRoundBottomRight(20);
        panelRoundEndDate.setRoundTopLeft(20);
        panelRoundEndDate.setRoundTopRight(20);

        endDateInput.setText("YYYY-MM-DD");
        endDateInput.setBorder(null);
        endDateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endDateInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRoundEndDateLayout = new javax.swing.GroupLayout(panelRoundEndDate);
        panelRoundEndDate.setLayout(panelRoundEndDateLayout);
        panelRoundEndDateLayout.setHorizontalGroup(
            panelRoundEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRoundEndDateLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(endDateInput, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRoundEndDateLayout.setVerticalGroup(
            panelRoundEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(endDateInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        startFind.setText("Start Find");
        startFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startFindMouseClicked(evt);
            }
        });
        startFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startFindActionPerformed(evt);
            }
        });

        topTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topTextLabel.setText("Top");

        panelRoundTop.setBackground(new java.awt.Color(255, 255, 255));
        panelRoundTop.setRoundBottomLeft(20);
        panelRoundTop.setRoundBottomRight(20);
        panelRoundTop.setRoundTopLeft(20);
        panelRoundTop.setRoundTopRight(20);

        topInput.setBorder(null);

        javax.swing.GroupLayout panelRoundTopLayout = new javax.swing.GroupLayout(panelRoundTop);
        panelRoundTop.setLayout(panelRoundTopLayout);
        panelRoundTopLayout.setHorizontalGroup(
            panelRoundTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRoundTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topInput, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );
        panelRoundTopLayout.setVerticalGroup(
            panelRoundTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
        );

        optionTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        optionTextLabel.setText("Option");

        option.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tags", "Entities", " " }));

        javax.swing.GroupLayout inputTrendingPanelLayout = new javax.swing.GroupLayout(inputTrendingPanel);
        inputTrendingPanel.setLayout(inputTrendingPanelLayout);
        inputTrendingPanelLayout.setHorizontalGroup(
            inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputTrendingPanelLayout.createSequentialGroup()
                .addContainerGap(416, Short.MAX_VALUE)
                .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelRoundTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(topTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(endDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputTrendingPanelLayout.createSequentialGroup()
                        .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(inputTrendingPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(optionTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelRoundEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRoundStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54)
                .addComponent(startFind)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        inputTrendingPanelLayout.setVerticalGroup(
            inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputTrendingPanelLayout.createSequentialGroup()
                .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputTrendingPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startDate)
                            .addComponent(panelRoundStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(startFind))
                    .addGroup(inputTrendingPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(optionTextLabel)
                            .addComponent(topTextLabel))
                        .addGap(3, 3, 3)
                        .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelRoundTop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4)
                .addGroup(inputTrendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endDate)
                    .addComponent(panelRoundEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout trendingPaneLayout = new javax.swing.GroupLayout(trendingPane);
        trendingPane.setLayout(trendingPaneLayout);
        trendingPaneLayout.setHorizontalGroup(
            trendingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barChart, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
            .addComponent(inputTrendingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        trendingPaneLayout.setVerticalGroup(
            trendingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trendingPaneLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(barChart, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(inputTrendingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuItems.addTab("tab4", trendingPane);

        importData.setBackground(new java.awt.Color(255, 255, 255));

        chooseFileToImport.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        chooseFileToImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileToImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout importDataLayout = new javax.swing.GroupLayout(importData);
        importData.setLayout(importDataLayout);
        importDataLayout.setHorizontalGroup(
            importDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chooseFileToImport, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
        );
        importDataLayout.setVerticalGroup(
            importDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, importDataLayout.createSequentialGroup()
                .addGap(0, 96, Short.MAX_VALUE)
                .addComponent(chooseFileToImport, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuItems.addTab("tab8", importData);

        managerPane.setBackground(new java.awt.Color(255, 255, 255));

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Role"
            }
        ));
        managerScrollPane.setViewportView(usersTable);

        deleteUserPanel.setBackground(new java.awt.Color(255, 255, 255));
        deleteUserPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        deleteUserPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteUserPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteUserPanelMouseClicked(evt);
            }
        });

        deleteUserLabel.setText("Delete user");
        deleteUserLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout deleteUserPanelLayout = new javax.swing.GroupLayout(deleteUserPanel);
        deleteUserPanel.setLayout(deleteUserPanelLayout);
        deleteUserPanelLayout.setHorizontalGroup(
            deleteUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteUserPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(deleteUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        deleteUserPanelLayout.setVerticalGroup(
            deleteUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteUserPanelLayout.createSequentialGroup()
                .addComponent(deleteUserLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        addUserPanel.setBackground(new java.awt.Color(255, 255, 255));
        addUserPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addUserPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addUserPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserPanelMouseClicked(evt);
            }
        });

        addUserLabel.setText("Add User");
        addUserLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout addUserPanelLayout = new javax.swing.GroupLayout(addUserPanel);
        addUserPanel.setLayout(addUserPanelLayout);
        addUserPanelLayout.setHorizontalGroup(
            addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserPanelLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(addUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        addUserPanelLayout.setVerticalGroup(
            addUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserPanelLayout.createSequentialGroup()
                .addComponent(addUserLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout managerPaneLayout = new javax.swing.GroupLayout(managerPane);
        managerPane.setLayout(managerPaneLayout);
        managerPaneLayout.setHorizontalGroup(
            managerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerPaneLayout.createSequentialGroup()
                .addGap(715, 715, 715)
                .addComponent(deleteUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(addUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
            .addComponent(managerScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        managerPaneLayout.setVerticalGroup(
            managerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managerPaneLayout.createSequentialGroup()
                .addGap(0, 117, Short.MAX_VALUE)
                .addGroup(managerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteUserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUserPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(managerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        deleteDataButtonPanel.setVisible(false);

        menuItems.addTab("tab7", managerPane);

        dataPanel.setBackground(new java.awt.Color(255, 255, 255));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Link", "WebsiteSource", "Type", "Summary", "Title", "Content", "Date", "Tags", "Author", "Category", "Entities"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        dataTableSrcollPane.setViewportView(dataTable);

        topBackground.setBackground(new java.awt.Color(0, 153, 204));
        topBackground.setColorGradient(new java.awt.Color(0, 204, 204));

        textChangeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textChangeBoxActionPerformed(evt);
            }
        });

        dataTextLabel.setText("Text :");

        exportToCSVButton.setBackground(new java.awt.Color(255, 255, 255));
        exportToCSVButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        exportToCSVButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exportToCSVButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportToCSVButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportToCSVButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exportToCSVButtonMouseExited(evt);
            }
        });

        exportToCSVLabel.setText("Export to CSV");
        exportToCSVLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout exportToCSVButtonLayout = new javax.swing.GroupLayout(exportToCSVButton);
        exportToCSVButton.setLayout(exportToCSVButtonLayout);
        exportToCSVButtonLayout.setHorizontalGroup(
            exportToCSVButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportToCSVButtonLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(exportToCSVLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        exportToCSVButtonLayout.setVerticalGroup(
            exportToCSVButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportToCSVButtonLayout.createSequentialGroup()
                .addComponent(exportToCSVLabel)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        deleteDataButtonPanel.setBackground(new java.awt.Color(255, 255, 255));
        deleteDataButtonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        deleteDataButtonPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteDataButtonPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteDataButtonPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteDataButtonPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteDataButtonPanelMouseExited(evt);
            }
        });

        deleteDataButtonLabel.setText("Delete");
        deleteDataButtonLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout deleteDataButtonPanelLayout = new javax.swing.GroupLayout(deleteDataButtonPanel);
        deleteDataButtonPanel.setLayout(deleteDataButtonPanelLayout);
        deleteDataButtonPanelLayout.setHorizontalGroup(
            deleteDataButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDataButtonPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(deleteDataButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        deleteDataButtonPanelLayout.setVerticalGroup(
            deleteDataButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDataButtonPanelLayout.createSequentialGroup()
                .addComponent(deleteDataButtonLabel)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout topBackgroundLayout = new javax.swing.GroupLayout(topBackground);
        topBackground.setLayout(topBackgroundLayout);
        topBackgroundLayout.setHorizontalGroup(
            topBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBackgroundLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(dataTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textChangeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(exportToCSVButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(deleteDataButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topBackgroundLayout.setVerticalGroup(
            topBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBackgroundLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(topBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteDataButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportToCSVButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(topBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textChangeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataTextLabel)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        //textChangeBox.setVisible(false);

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dataTableSrcollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
            .addComponent(topBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanelLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(topBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataTableSrcollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuItems.addTab("tab7", dataPanel);

        settingPanel.setBackground(new java.awt.Color(255, 255, 255));

        hostText.setText("Host Name");

        databaseNameText.setText("Database Name");
        databaseNameText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        sqlUsernameText.setText("Username");

        sqlPasswordText.setText("Password");

        javax.swing.GroupLayout sqlInformationLayout = new javax.swing.GroupLayout(sqlInformation);
        sqlInformation.setLayout(sqlInformationLayout);
        sqlInformationLayout.setHorizontalGroup(
            sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sqlInformationLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sqlPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sqlInformationLayout.createSequentialGroup()
                            .addComponent(sqlUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(sqlPasswordTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sqlInformationLayout.createSequentialGroup()
                            .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(hostText, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(databaseNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(databaseNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hostNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        sqlInformationLayout.setVerticalGroup(
            sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sqlInformationLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(databaseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(databaseNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sqlUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sqlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sqlPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sqlPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        switchButtonForSQL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        switchButtonForSQL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        switchButtonForSQL.setPreferredSize(new java.awt.Dimension(64, 32));
        switchButtonForSQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchButtonForSQLMouseClicked(evt);
            }
        });

        sqlWhitePart.setBackground(java.awt.Color.white);
        sqlWhitePart.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout sqlWhitePartLayout = new javax.swing.GroupLayout(sqlWhitePart);
        sqlWhitePart.setLayout(sqlWhitePartLayout);
        sqlWhitePartLayout.setHorizontalGroup(
            sqlWhitePartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );
        sqlWhitePartLayout.setVerticalGroup(
            sqlWhitePartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        sqlBlackPart.setBackground(java.awt.Color.darkGray);
        sqlBlackPart.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout sqlBlackPartLayout = new javax.swing.GroupLayout(sqlBlackPart);
        sqlBlackPart.setLayout(sqlBlackPartLayout);
        sqlBlackPartLayout.setHorizontalGroup(
            sqlBlackPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );
        sqlBlackPartLayout.setVerticalGroup(
            sqlBlackPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout switchButtonForSQLLayout = new javax.swing.GroupLayout(switchButtonForSQL);
        switchButtonForSQL.setLayout(switchButtonForSQLLayout);
        switchButtonForSQLLayout.setHorizontalGroup(
            switchButtonForSQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, switchButtonForSQLLayout.createSequentialGroup()
                .addComponent(sqlBlackPart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(sqlWhitePart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        switchButtonForSQLLayout.setVerticalGroup(
            switchButtonForSQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(switchButtonForSQLLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(switchButtonForSQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sqlWhitePart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sqlBlackPart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sqlInformationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sqlInformationLabel.setText("SQL information");
        sqlInformationLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout settingPanelLayout = new javax.swing.GroupLayout(settingPanel);
        settingPanel.setLayout(settingPanelLayout);
        settingPanelLayout.setHorizontalGroup(
            settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingPanelLayout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addGroup(settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sqlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(settingPanelLayout.createSequentialGroup()
                        .addComponent(sqlInformationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(switchButtonForSQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79))
        );
        settingPanelLayout.setVerticalGroup(
            settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingPanelLayout.createSequentialGroup()
                .addContainerGap(218, Short.MAX_VALUE)
                .addGroup(settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(switchButtonForSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(sqlInformationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(sqlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(270, 270, 270))
        );

        sqlInformation.setVisible(false);

        menuItems.addTab("tab1", settingPanel);

        searchingResultsDisplayBackground.setBackground(new java.awt.Color(204, 255, 255));
        searchingResultsDisplayBackground.setColorGradient(new java.awt.Color(255, 204, 204));

        resulst2.setBackground(new java.awt.Color(204, 204, 204));
        resulst2.setRoundBottomLeft(50);
        resulst2.setRoundBottomRight(50);
        resulst2.setRoundTopLeft(50);
        resulst2.setRoundTopRight(50);

        title2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title2.setText("No Title");
        title2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title2MouseClicked(evt);
            }
        });

        summary2.setText("No summary");
        summary2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author2.setText("Author: ");

        date2.setText("Date: ");

        javax.swing.GroupLayout resulst2Layout = new javax.swing.GroupLayout(resulst2);
        resulst2.setLayout(resulst2Layout);
        resulst2Layout.setHorizontalGroup(
            resulst2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resulst2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(resulst2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resulst2Layout.createSequentialGroup()
                        .addComponent(author2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(summary2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        resulst2Layout.setVerticalGroup(
            resulst2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resulst2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(resulst2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author2)
                    .addComponent(date2))
                .addContainerGap())
        );

        result3.setBackground(new java.awt.Color(204, 204, 204));
        result3.setPreferredSize(new java.awt.Dimension(419, 100));
        result3.setRoundBottomLeft(50);
        result3.setRoundBottomRight(50);
        result3.setRoundTopLeft(50);
        result3.setRoundTopRight(50);

        title3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title3.setText("No Title");
        title3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title3MouseClicked(evt);
            }
        });

        summary3.setText("No summary");
        summary3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author3.setText("Author: ");

        date3.setText("Date: ");

        javax.swing.GroupLayout result3Layout = new javax.swing.GroupLayout(result3);
        result3.setLayout(result3Layout);
        result3Layout.setHorizontalGroup(
            result3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, result3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(result3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(summary3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(result3Layout.createSequentialGroup()
                        .addComponent(author3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        result3Layout.setVerticalGroup(
            result3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(result3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author3)
                    .addComponent(date3))
                .addContainerGap())
        );

        result1.setBackground(new java.awt.Color(204, 204, 204));
        result1.setRoundBottomLeft(50);
        result1.setRoundBottomRight(50);
        result1.setRoundTopLeft(50);
        result1.setRoundTopRight(50);

        title1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title1.setText("No Title");
        title1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title1MouseClicked(evt);
            }
        });

        summary1.setText("No summary");
        summary1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author1.setText("Author: ");

        date1.setText("Date: ");

        javax.swing.GroupLayout result1Layout = new javax.swing.GroupLayout(result1);
        result1.setLayout(result1Layout);
        result1Layout.setHorizontalGroup(
            result1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(result1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(summary1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(result1Layout.createSequentialGroup()
                        .addComponent(author1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        result1Layout.setVerticalGroup(
            result1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(result1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author1)
                    .addComponent(date1))
                .addContainerGap())
        );

        result4.setBackground(new java.awt.Color(204, 204, 204));
        result4.setRoundBottomLeft(50);
        result4.setRoundBottomRight(50);
        result4.setRoundTopLeft(50);
        result4.setRoundTopRight(50);

        title4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title4.setText("No Title");
        title4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title4MouseClicked(evt);
            }
        });

        summary4.setText("No summary");
        summary4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author4.setText("Author: ");

        date4.setText("Date: ");

        javax.swing.GroupLayout result4Layout = new javax.swing.GroupLayout(result4);
        result4.setLayout(result4Layout);
        result4Layout.setHorizontalGroup(
            result4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(result4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(summary4, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title4, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(result4Layout.createSequentialGroup()
                        .addComponent(author4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        result4Layout.setVerticalGroup(
            result4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(result4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author4)
                    .addComponent(date4))
                .addContainerGap())
        );

        results6.setBackground(new java.awt.Color(204, 204, 204));
        results6.setRoundBottomLeft(50);
        results6.setRoundBottomRight(50);
        results6.setRoundTopLeft(50);
        results6.setRoundTopRight(50);

        title6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title6.setText("No Title");
        title6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title6MouseClicked(evt);
            }
        });

        summary6.setText("No summary");
        summary6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author6.setText("Author: ");

        date6.setText("Date: ");

        javax.swing.GroupLayout results6Layout = new javax.swing.GroupLayout(results6);
        results6.setLayout(results6Layout);
        results6Layout.setHorizontalGroup(
            results6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(results6Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(results6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(summary6, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title6, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(results6Layout.createSequentialGroup()
                        .addComponent(author6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        results6Layout.setVerticalGroup(
            results6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(results6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(results6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author6)
                    .addComponent(date6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        result5.setBackground(new java.awt.Color(204, 204, 204));
        result5.setPreferredSize(new java.awt.Dimension(419, 100));
        result5.setRoundBottomLeft(50);
        result5.setRoundBottomRight(50);
        result5.setRoundTopLeft(50);
        result5.setRoundTopRight(50);

        title5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title5.setText("No title");
        title5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title5MouseClicked(evt);
            }
        });

        summary5.setText("No summary");
        summary5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author5.setText("Author: ");

        date5.setText("Date: ");

        javax.swing.GroupLayout result5Layout = new javax.swing.GroupLayout(result5);
        result5.setLayout(result5Layout);
        result5Layout.setHorizontalGroup(
            result5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result5Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(result5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(result5Layout.createSequentialGroup()
                        .addComponent(author5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(summary5, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title5, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        result5Layout.setVerticalGroup(
            result5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(result5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author5)
                    .addComponent(date5))
                .addContainerGap())
        );

        result8.setBackground(new java.awt.Color(204, 204, 204));
        result8.setRoundBottomLeft(50);
        result8.setRoundBottomRight(50);
        result8.setRoundTopLeft(50);
        result8.setRoundTopRight(50);

        title8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title8.setText("No Title");
        title8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title8MouseClicked(evt);
            }
        });

        summary8.setText("No summary");
        summary8.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author8.setText("Author: ");

        date8.setText("Date: ");

        javax.swing.GroupLayout result8Layout = new javax.swing.GroupLayout(result8);
        result8.setLayout(result8Layout);
        result8Layout.setHorizontalGroup(
            result8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result8Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(result8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(summary8, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title8, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(result8Layout.createSequentialGroup()
                        .addComponent(author8, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date8, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        result8Layout.setVerticalGroup(
            result8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author8)
                    .addComponent(date8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        results7.setBackground(new java.awt.Color(204, 204, 204));
        results7.setPreferredSize(new java.awt.Dimension(419, 100));
        results7.setRoundBottomLeft(50);
        results7.setRoundBottomRight(50);
        results7.setRoundTopLeft(50);
        results7.setRoundTopRight(50);

        title7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        title7.setText("No Title");
        title7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        title7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                title7MouseClicked(evt);
            }
        });

        summary7.setText("No summary");
        summary7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        author7.setText("Author: ");

        date7.setText("Date: ");

        javax.swing.GroupLayout results7Layout = new javax.swing.GroupLayout(results7);
        results7.setLayout(results7Layout);
        results7Layout.setHorizontalGroup(
            results7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(results7Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(results7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(summary7, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title7, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(results7Layout.createSequentialGroup()
                        .addComponent(author7, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
        );
        results7Layout.setVerticalGroup(
            results7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(results7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summary7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(results7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author7)
                    .addComponent(date7))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        colorPanel.setBackground(new java.awt.Color(102, 153, 255));

        pageNumberButton.setRoundBottomLeft(10);
        pageNumberButton.setRoundBottomRight(10);
        pageNumberButton.setRoundTopLeft(10);
        pageNumberButton.setRoundTopRight(10);

        pageNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pageNumber.setText("PageNum");
        pageNumber.setMinimumSize(new java.awt.Dimension(6, 6));

        javax.swing.GroupLayout pageNumberButtonLayout = new javax.swing.GroupLayout(pageNumberButton);
        pageNumberButton.setLayout(pageNumberButtonLayout);
        pageNumberButtonLayout.setHorizontalGroup(
            pageNumberButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pageNumberButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pageNumberButtonLayout.setVerticalGroup(
            pageNumberButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pageNumberButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pageNumber.setText("1/" + (int)(searchingResultsTable.getRowCount()/8+1));

        previousButton.setRoundBottomLeft(10);
        previousButton.setRoundBottomRight(10);
        previousButton.setRoundTopLeft(10);
        previousButton.setRoundTopRight(10);
        previousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousButtonMouseClicked(evt);
            }
        });

        previousLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        previousLabel.setText("Previous");
        previousLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previousLabel.setMinimumSize(new java.awt.Dimension(6, 6));

        javax.swing.GroupLayout previousButtonLayout = new javax.swing.GroupLayout(previousButton);
        previousButton.setLayout(previousButtonLayout);
        previousButtonLayout.setHorizontalGroup(
            previousButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previousButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(previousLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        previousButtonLayout.setVerticalGroup(
            previousButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, previousButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(previousLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        nextButton.setRoundBottomLeft(10);
        nextButton.setRoundBottomRight(10);
        nextButton.setRoundTopLeft(10);
        nextButton.setRoundTopRight(10);
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });

        nextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nextLabel.setText("Next");
        nextLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextLabel.setMinimumSize(new java.awt.Dimension(6, 6));

        javax.swing.GroupLayout nextButtonLayout = new javax.swing.GroupLayout(nextButton);
        nextButton.setLayout(nextButtonLayout);
        nextButtonLayout.setHorizontalGroup(
            nextButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );
        nextButtonLayout.setVerticalGroup(
            nextButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nextButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(nextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout colorPanelLayout = new javax.swing.GroupLayout(colorPanel);
        colorPanel.setLayout(colorPanelLayout);
        colorPanelLayout.setHorizontalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorPanelLayout.createSequentialGroup()
                .addContainerGap(457, Short.MAX_VALUE)
                .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(pageNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(422, Short.MAX_VALUE))
        );
        colorPanelLayout.setVerticalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pageNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        previousButton.setVisible(false);

        timeProcessing.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        timeProcessing.setText("TimeProcessing");

        javax.swing.GroupLayout searchingResultsDisplayBackgroundLayout = new javax.swing.GroupLayout(searchingResultsDisplayBackground);
        searchingResultsDisplayBackground.setLayout(searchingResultsDisplayBackgroundLayout);
        searchingResultsDisplayBackgroundLayout.setHorizontalGroup(
            searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(colorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(searchingResultsDisplayBackgroundLayout.createSequentialGroup()
                .addContainerGap(143, Short.MAX_VALUE)
                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(searchingResultsDisplayBackgroundLayout.createSequentialGroup()
                            .addComponent(results7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(result8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(results6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(result5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchingResultsDisplayBackgroundLayout.createSequentialGroup()
                                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(result3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(result1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resulst2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(result4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        searchingResultsDisplayBackgroundLayout.setVerticalGroup(
            searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchingResultsDisplayBackgroundLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(timeProcessing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resulst2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(result1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(result3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(result4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(results6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(result5, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(searchingResultsDisplayBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(results7, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(colorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout searchingResultsDisplayLayout = new javax.swing.GroupLayout(searchingResultsDisplay);
        searchingResultsDisplay.setLayout(searchingResultsDisplayLayout);
        searchingResultsDisplayLayout.setHorizontalGroup(
            searchingResultsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchingResultsDisplayBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        searchingResultsDisplayLayout.setVerticalGroup(
            searchingResultsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchingResultsDisplayLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(searchingResultsDisplayBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        menuItems.addTab("tab9", searchingResultsDisplay);

        searchingResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Link", "WebsiteSource", "Type", "Summary", "Title", "Content", "Date", "Tags", "Author", "Category", "Entities"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchingResultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchingResultsTableMouseClicked(evt);
            }
        });
        searchingResultsScrollTablePanelDataPane.setViewportView(searchingResultsTable);
        if (searchingResultsTable.getColumnModel().getColumnCount() > 0) {
            searchingResultsTable.getColumnModel().getColumn(0).setResizable(false);
        }

        topBackgroundForSearchingResultsPanel.setBackground(new java.awt.Color(153, 204, 255));
        topBackgroundForSearchingResultsPanel.setColorGradient(new java.awt.Color(204, 204, 204));

        textLabel.setText("Text:");

        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topBackgroundForSearchingResultsPanelLayout = new javax.swing.GroupLayout(topBackgroundForSearchingResultsPanel);
        topBackgroundForSearchingResultsPanel.setLayout(topBackgroundForSearchingResultsPanelLayout);
        topBackgroundForSearchingResultsPanelLayout.setHorizontalGroup(
            topBackgroundForSearchingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBackgroundForSearchingResultsPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topBackgroundForSearchingResultsPanelLayout.setVerticalGroup(
            topBackgroundForSearchingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topBackgroundForSearchingResultsPanelLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(topBackgroundForSearchingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textLabel)
                    .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout searchingResultsPanelLayout = new javax.swing.GroupLayout(searchingResultsPanel);
        searchingResultsPanel.setLayout(searchingResultsPanelLayout);
        searchingResultsPanelLayout.setHorizontalGroup(
            searchingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchingResultsScrollTablePanelDataPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
            .addComponent(topBackgroundForSearchingResultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        searchingResultsPanelLayout.setVerticalGroup(
            searchingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchingResultsPanelLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(topBackgroundForSearchingResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchingResultsScrollTablePanelDataPane, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        menuItems.addTab("tab8", searchingResultsPanel);

        getContentPane().add(menuItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, -40, 1060, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //
    
    
    private void searchIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchIconMouseClicked
        if(!searchTextSub.isEnabled()){
            searchTextSub.setEnabled(true);
            searchTextSub.setVisible(true);
        }
        else{
            searchTextSub.setEnabled(false);
            searchTextSub.setVisible(false);
            searchTextSub.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12));
            searchTextSub.setText("Serach for something");
        }
    }//GEN-LAST:event_searchIconMouseClicked

    private void searchTextSubKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextSubKeyPressed
        currentPage = 1;
        long startTime = System.currentTimeMillis();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER ){
            try {
                //search data in SQL or CSV
                if(SQLSelected){
                    SQL.search(searchTextSub.getText(), dataTable);
                }
                else{
                    RunPython.search(searchTextSub.getText(), smartSearch, searchingResultsTable);
                }
                System.out.println(FilePathsManager.getSaveFilePath());
                if(filter){
                    RunPython.run(FilePathsManager.getFilterDataFilePath());
                    CSVHandler.fillTable(searchingResultsTable, FilePathsManager.getTempFilePath());
                }
                time = (System.currentTimeMillis() - startTime)/1000;
                //display searching results
                repaintSearchingDisplay();
                //hide search bar
                searchTextSub.setEnabled(false);
                searchTextSub.setVisible(false);
                searchTextSub.setFont(new java.awt.Font("Tempus Sans ITC", 2, 12));
                searchTextSub.setText("Search for something");
                
                //show searching results
                searchTextSub.setText("");
                menuItems.setSelectedIndex(7);
            } catch (SQLException | IOException | CsvException ex) {
                Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_searchTextSubKeyPressed

    private void searchTextSubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextSubMouseClicked
        searchTextSub.setFont(new java.awt.Font("Segoe UI Light", 1, 12));
        searchTextSub.setText("");
        
    }//GEN-LAST:event_searchTextSubMouseClicked

    private void sideBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sideBarMouseClicked
        if(menu.isEnabled()){
            for(int i=0;i<=240;i++){
                menu.setLocation(-i,90);
                repaint();
            }
            menu.setEnabled(false);
            //
            menuItems.setSize(1300,715);
            menuItems.setLocation(0,0);
        }
        else{
            for(int i=0;i<=240;i++){
                menu.setLocation(i-240,90);
                repaint();
            }
            menu.setEnabled(true);
            menuItems.setSize(1060,715);
            menuItems.setLocation(240,0);
        }
    }//GEN-LAST:event_sideBarMouseClicked

    private void chooseFileToImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileToImportActionPerformed
        currentPercentage = 0;
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        
        File file = chooseFileToImport.getSelectedFile();
        String fileName = file.toString();
        int index = fileName.lastIndexOf('.');
        if(index > 0) {
            String extension = fileName.substring(index + 1);
            if("csv".equals(extension)){
                try {
                    loading = true;
                    loadingPopup.pack();
                    loadingPopup.setLocationRelativeTo(null);
                    loadingPopup.setVisible(true);
                    CSVReader reader = new CSVReader(new FileReader(file));
                    List<String[]> myEntries = reader.readAll();
                    int length = myEntries.size();
                    for (int row=0;row<length;row++){
                        String[] text = myEntries.get(row);
                        int currentProgress = (int) (currentPercentage * 100.0 / length);
                        progressBar.setValue(currentProgress);
                        repaint(); // Refresh the progress bar
                        if(SQLSelected){
                            SQL.addRow(text[1],text[2],text[3],text[4],text[5],text[6],text[7],text[8],text[9],text[10], text[11]);
                        }
                        else{
                            model.addRow(new Object[]{text[0],text[1],text[2],text[3],text[4],text[5],text[6],text[7],text[8],text[9],text[10], text[11]});
                        }
                        currentPercentage += 1;
                    }
                    CSVHandler.removeCSV(FilePathsManager.getSaveFilePath());
                    CSVHandler.exportCSV(dataTable, FilePathsManager.getSaveFilePath());
                    loadingPopup.setVisible(false);
                    repaint();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException | CsvException | InterruptedException  ex) {
                    Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                ///other extensions handling goes here
            }
        }
    }//GEN-LAST:event_chooseFileToImportActionPerformed

    private void deleteDataButtonPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteDataButtonPanelMouseClicked
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        int[] removeRow = dataTable.getSelectedRows();
        for (int i: removeRow){
            try {
                if(SQLSelected){
                    SQL.removeRow((String) dataTable.getValueAt(removeRow[0], 0));
                }
                model.removeRow(removeRow[0]);
            } catch (SQLException ex) {
                Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            CSVHandler.exportCSV(dataTable, FilePathsManager.getSaveFilePath());
        } catch (IOException | CsvValidationException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        dataTable.repaint();
    }//GEN-LAST:event_deleteDataButtonPanelMouseClicked
    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        JTable tempTable = (JTable) dataTable;
        Object Text = dataTable.getValueAt(tempTable.getSelectedRow(), tempTable.getSelectedColumn());
        textChangeBox.setText((String)Text);
    }//GEN-LAST:event_dataTableMouseClicked

    private void textChangeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textChangeBoxActionPerformed
        Object Text = textChangeBox.getText();
        dataTable.setValueAt(Text, dataTable.getSelectedRow(),dataTable.getSelectedColumn());
        try {
            if(SQLSelected){
                SQL.modifyCell((String)Text, (String)dataTable.getValueAt(dataTable.getSelectedRow(),0), dataTable.getColumnName(dataTable.getSelectedColumn()), "data1");
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            CSVHandler.exportCSV(dataTable,FilePathsManager.getSaveFilePath());
        } catch (IOException | CsvValidationException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_textChangeBoxActionPerformed
    private void exportToCSVButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportToCSVButtonMouseClicked
        try {
            CSVHandler.exportCSV(dataTable, FilePathsManager.getExportFilePath());
        } catch (IOException | CsvValidationException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportToCSVButtonMouseClicked

    private void fileChooserForInportDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserForInportDataActionPerformed
        String file = fileChooserForInportData.getCurrentDirectory().toString();
        System.out.println(file);
        try {
            CSVHandler.exportCSV(dataTable, file);
        } catch (IOException | CsvValidationException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fileChooserForInportDataActionPerformed

    private void switchButtonForSQLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchButtonForSQLMouseClicked
        //button animation
        if(sqlWhitePart.getBackground() == Color.WHITE){
            sqlWhitePart.setBackground(Color.DARK_GRAY);
            sqlBlackPart.setBackground(Color.WHITE);
        }
        else{
            sqlBlackPart.setBackground(Color.DARK_GRAY);
            sqlWhitePart.setBackground(Color.WHITE);
        }
        //hide/display information
        boolean temp = SQLSelected;
        SQLSelected = !temp;
        sqlInformation.setVisible(!sqlInformation.isVisible());
        repaint();
    }//GEN-LAST:event_switchButtonForSQLMouseClicked

    private void deleteDataButtonPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteDataButtonPanelMouseEntered
        deleteDataButtonPanel.setBackground(new Color(242,242,242));
    }//GEN-LAST:event_deleteDataButtonPanelMouseEntered

    private void deleteDataButtonPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteDataButtonPanelMouseExited
        deleteDataButtonPanel.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_deleteDataButtonPanelMouseExited

    private void exportToCSVButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportToCSVButtonMouseEntered
        exportToCSVButton.setBackground(new Color(242,242,242));
    }//GEN-LAST:event_exportToCSVButtonMouseEntered

    private void exportToCSVButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportToCSVButtonMouseExited
        exportToCSVButton.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_exportToCSVButtonMouseExited

    private void exitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseEntered
        exitButton.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_exitButtonMouseEntered

    private void exitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseExited
        exitButton.setBackground(Color.WHITE);
    }//GEN-LAST:event_exitButtonMouseExited

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        exitButton.setBackground(Color.BLACK);
        //action
        loginPane.setVisible(false);
        
    }//GEN-LAST:event_exitButtonMouseClicked

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
        //add your handling code here
        String role = login(username.getText(), password.getText());
        if("Admin".equals(role)){
            admin = true;
            manager = false;
        }
        if("Manager".equals(role)){
            admin = false;
            manager = true;
        }
        if(admin || manager){
            loginPane.setVisible(false);
            loginText.setText(username.getText());
            if(admin){
                importDataButton.setVisible(true);
                managerButton.setVisible(true);
                deleteDataButtonPanel.setVisible(true);
                dataTextLabel.setVisible(true);
                textChangeBox.setVisible(true);
                logoutButton.setVisible(true);
            }
            else if(manager){
                importDataButton.setVisible(true);
                deleteDataButtonPanel.setVisible(true);
                dataTextLabel.setVisible(true);
                textChangeBox.setVisible(true);
                logoutButton.setVisible(true);
            }
        }
        username.setText("");
        password.setText("");
        repaint();
    }//GEN-LAST:event_loginButtonMouseClicked

    private void loginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseEntered
        loginButton.setBackground(new Color(232,232,232));
    }//GEN-LAST:event_loginButtonMouseEntered

    private void loginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseExited
        loginButton.setBackground(new Color(242,242,242));
    }//GEN-LAST:event_loginButtonMouseExited

    private void deleteUserPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteUserPanelMouseClicked
        DefaultTableModel model = (DefaultTableModel) usersTable.getModel();
        int[] removeRow = usersTable.getSelectedRows();
        for (int i: removeRow){
            try {
                if(SQLSelected){
                    SQL.RemoveUser((String) usersTable.getValueAt(removeRow[0], 0));
                }
                model.removeRow(i);
            } catch (SQLException ex) {
                Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            CSVHandler.exportCSV(usersTable, FilePathsManager.getUserFilePath());
        } catch (IOException | CsvValidationException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        usersTable.repaint();
    }//GEN-LAST:event_deleteUserPanelMouseClicked

    private void addUserPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserPanelMouseClicked
        addUserPane.pack();
        addUserPane.setLocationRelativeTo(null);
        addUserPane.setVisible(true);
        repaint();
        
    }//GEN-LAST:event_addUserPanelMouseClicked

    private void exitButtonForAddUserPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonForAddUserPaneMouseClicked
        addUserPane.setVisible(false);
        repaint();
    }//GEN-LAST:event_exitButtonForAddUserPaneMouseClicked

    private void exitButtonForAddUserPaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonForAddUserPaneMouseEntered
        exitButtonForAddUserPane.setBackground(new Color(242,242,242));
    }//GEN-LAST:event_exitButtonForAddUserPaneMouseEntered

    private void exitButtonForAddUserPaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonForAddUserPaneMouseExited
        exitButtonForAddUserPane.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_exitButtonForAddUserPaneMouseExited

    private void addButtonForUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonForUserMouseClicked
        DefaultTableModel model = (DefaultTableModel) usersTable.getModel();
        User newUser = new User(usernameTextField.getText(), passwordTextField.getText());
        BufferedReader br;  
        ArrayList<String> userlist = new ArrayList<>();
        duplicateUserCaution.setVisible(false);
        try {
            br = new BufferedReader(new FileReader(FilePathsManager.getUserFilePath()));
            String line = "";  
          
            
            while ((line = br.readLine()) != null) {
                    String[] values = line.split(",");
                    userlist.add(values[0]);
                    
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!userlist.contains(newUser.getUsername())){
            try {
                if(SQLSelected){
                    try {
                        SQL.AddUser(usernameTextField.getText(), passwordTextField.getText(), comboBoxForRole.getSelectedItem().toString());
                    } catch (InterruptedException | SQLException ex) {
                        Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                model.addRow(new Object[]{usernameTextField.getText(), passwordTextField.getText(), comboBoxForRole.getSelectedItem().toString()});
                CSVHandler.exportCSV(usersTable ,FilePathsManager.getUserFilePath());
               
                
                addUserPane.setVisible(false);
                
                repaint();
            } catch (IOException | CsvValidationException ex) {
                Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            duplicateUserCaution.setVisible(true);
        }
    }//GEN-LAST:event_addButtonForUserMouseClicked

    private void addButtonForUserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonForUserMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonForUserMouseEntered

    private void addButtonForUserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonForUserMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonForUserMouseExited

    private void menuButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuButtonMouseExited
        if (!menuButtonChoose){
            menuButton.setBackground(new java.awt.Color(51, 51, 51));
            menuButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_menuButtonMouseExited

    private void menuButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuButtonMouseEntered
        if (!menuButtonChoose){
            menuButton.setBackground(new java.awt.Color(102, 102, 102));
            menuButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_menuButtonMouseEntered

    private void menuButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuButtonMouseClicked
        menuButton.setBackground(new java.awt.Color(0, 0, 0));
        menuButton.setVisible(true);
        //set gray background again for unchoosen panels
        menuButtonChoose = true;
        searchMainButtonChoose = false;
        searchMainButtonMouseExited(evt);
        trendingButtonChoose = false;
        trendingButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        dataButtonChoose = false;
        dataButtonMouseExited(evt);
        importDataButtonChoose = false;
        managerButtonChoose = false;
        if(admin){
            importDataButtonMouseExited(evt);
            managerButtonMouseExited(evt);
        }
        else if(manager){
            managerButtonMouseExited(evt);
        }
        settingButtonChoose = false;
        settingButtonMouseExited(evt);
        menuItems.setSelectedIndex(0);
    }//GEN-LAST:event_menuButtonMouseClicked

    private void settingButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingButtonMouseExited
        if (!settingButtonChoose){
            settingButton.setBackground(new java.awt.Color(51, 51, 51));
            settingButton.setVisible(true);
            settingButton.repaint();
        }
    }//GEN-LAST:event_settingButtonMouseExited

    private void settingButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingButtonMouseEntered
        if (!settingButtonChoose){
            settingButton.setBackground(new java.awt.Color(102, 102, 102));
            settingButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_settingButtonMouseEntered

    private void settingButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingButtonMouseClicked
        settingButton.setBackground(new java.awt.Color(0, 0, 0));
        settingButton.setVisible(true);
        repaint();
        //set gray background again for unchoosen panels
        settingButtonChoose = true;
        searchMainButtonChoose = false;
        searchMainButtonMouseExited(evt);
        menuButtonChoose = false;
        menuButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        trendingButtonChoose = false;
        trendingButtonMouseExited(evt);
        importDataButtonChoose = false;
        managerButtonChoose = false;
        if(admin){
            importDataButtonMouseExited(evt);
            managerButtonMouseExited(evt);
        }
        else if(manager){
            managerButtonMouseExited(evt);
        }
        dataButtonChoose = false;
        dataButtonMouseExited(evt);
        menuItems.setSelectedIndex(6);
    }//GEN-LAST:event_settingButtonMouseClicked

    private void searchMainButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMainButtonMouseExited
        if (!searchMainButtonChoose){
            searchMainButton.setBackground(new java.awt.Color(51, 51, 51));
            searchMainButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_searchMainButtonMouseExited

    private void searchMainButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMainButtonMouseEntered
        if (!searchMainButtonChoose){
            searchMainButton.setBackground(new java.awt.Color(102, 102, 102));
            searchMainButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_searchMainButtonMouseEntered

    private void searchMainButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMainButtonMouseClicked
        searchMainButton.setBackground(new java.awt.Color(0, 0, 0));
        searchMainButton.setVisible(true);
        repaint();
        //set gray background again for unchoosen panels
        searchMainButtonChoose = true;
        trendingButtonChoose = false;
        trendingButtonMouseExited(evt);
        menuButtonChoose = false;
        menuButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        dataButtonChoose = false;
        dataButtonMouseExited(evt);
        importDataButtonChoose = false;
        managerButtonChoose = false;
        if(admin){
            importDataButtonMouseExited(evt);
            managerButtonMouseExited(evt);
        }
        else if(manager){
            managerButtonMouseExited(evt);
        }
        settingButtonChoose = false;
        settingButtonMouseExited(evt);
        //refresh filter
        try {
            chooseTag.setPrototypeDisplayValue("XXXXXXXXX");
            chooseCategories.setPrototypeDisplayValue("XXXXXXXXX");
            chooseTag.removeAllItems();
            chooseCategories.removeAllItems();
            CSVReader tagsReader = new CSVReader(new FileReader(FilePathsManager.getTagsFilePath()));
            CSVReader categoriesReader = new CSVReader(new FileReader(FilePathsManager.getCategoriesFilePath()));
            List<String[]> tags = tagsReader.readAll();
            List<String[]> categories = categoriesReader.readAll();
            for(String[] row : tags){
                for(String r : row){
                    chooseTag.addItem(r);
                }
            }
            for(String[] row : categories){
                for(String r : row){
                    chooseCategories.addItem(r);
                }
            }
            tagsFilterText.setText("");
            categoriesFilterText.setText("");
            searchTextMain.setText("");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | CsvException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        menuItems.setSelectedIndex(1);
    }//GEN-LAST:event_searchMainButtonMouseClicked

    private void trendingButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trendingButtonMouseExited
        if (!trendingButtonChoose){
            trendingButton.setBackground(new java.awt.Color(51, 51, 51));
            trendingButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_trendingButtonMouseExited

    //
    private void trendingButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trendingButtonMouseEntered
        if (!trendingButtonChoose){
            trendingButton.setBackground(new java.awt.Color(102, 102, 102));
            trendingButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_trendingButtonMouseEntered

    private void trendingButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trendingButtonMouseClicked
        trendingButton.setBackground(new java.awt.Color(0, 0, 0));
        repaint();
        //set gray background again for unchoosen panels
        trendingButtonChoose = true;
        searchMainButtonChoose = false;
        searchMainButtonMouseExited(evt);
        menuButtonChoose = false;
        menuButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        dataButtonChoose = false;
        dataButtonMouseExited(evt);
        importDataButtonChoose = false;
        managerButtonChoose = false;
        if(admin){
            importDataButtonMouseExited(evt);
            managerButtonMouseExited(evt);
        }
        else if(manager){
            managerButtonMouseExited(evt);
        }
        settingButtonChoose = false;
        settingButtonMouseExited(evt);
        menuItems.setSelectedIndex(2);
    }//GEN-LAST:event_trendingButtonMouseClicked

    private void dataButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataButtonMouseExited
        if (!dataButtonChoose){
            dataButton.setBackground(new java.awt.Color(51, 51, 51));
            dataButton.setVisible(true);
            dataButton.repaint();
        }
    }//GEN-LAST:event_dataButtonMouseExited

    private void dataButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataButtonMouseEntered
        if (!dataButtonChoose){
            dataButton.setBackground(new java.awt.Color(102, 102, 102));
            dataButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_dataButtonMouseEntered

    private void dataButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataButtonMouseClicked
        dataButton.setBackground(new java.awt.Color(0, 0, 0));
        dataButton.setVisible(true);
        if(admin || manager){
            deleteDataButtonPanel.setEnabled(true);
            dataTextLabel.setVisible(true);
            textChangeBox.setVisible(true);
        }
        repaint();
        //set gray background again for unchoosen panels
        dataButtonChoose = true;
        searchMainButtonChoose = false;
        searchMainButtonMouseExited(evt);
        menuButtonChoose = false;
        menuButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        trendingButtonChoose = false;
        trendingButtonMouseExited(evt);
        importDataButtonChoose = false;
        managerButtonChoose = false;
        if(admin){
            importDataButtonMouseExited(evt);
            managerButtonMouseExited(evt);
        }
        else if(manager){
            managerButtonMouseExited(evt);
        }
        settingButtonChoose = false;
        settingButtonMouseExited(evt);
        menuItems.setSelectedIndex(5);
    }//GEN-LAST:event_dataButtonMouseClicked

    private void managerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managerButtonMouseExited
        if (!managerButtonChoose){
            managerButton.setBackground(new java.awt.Color(51, 51, 51));
            repaint();
        }
    }//GEN-LAST:event_managerButtonMouseExited

    private void managerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managerButtonMouseEntered
        if (!managerButtonChoose){
            managerButton.setBackground(new java.awt.Color(102, 102, 102));
            managerButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_managerButtonMouseEntered

    private void managerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managerButtonMouseClicked
        managerButton.setBackground(new java.awt.Color(0, 0, 0));
        repaint();
        //set gray background again for unchoosen panels
        managerButtonChoose = true;
        searchMainButtonChoose = false;
        searchMainButtonMouseExited(evt);
        menuButtonChoose = false;
        menuButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        trendingButtonChoose = false;
        trendingButtonMouseExited(evt);
        importDataButtonChoose = false;
        importDataButtonMouseExited(evt);
        dataButtonChoose = false;
        dataButtonMouseExited(evt);
        settingButtonChoose = false;
        settingButtonMouseExited(evt);
        menuItems.setSelectedIndex(4);
        try {
            //display managers
            CSVHandler.fillTable(usersTable, FilePathsManager.getUserFilePath());
        } catch (IOException | CsvException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_managerButtonMouseClicked

    private void importDataButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importDataButtonMouseExited
        if (!importDataButtonChoose){
            importDataButton.setBackground(new java.awt.Color(51, 51, 51));
            repaint();
        }
    }//GEN-LAST:event_importDataButtonMouseExited

    private void importDataButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importDataButtonMouseEntered
        if (!importDataButtonChoose){
            importDataButton.setBackground(new java.awt.Color(102, 102, 102));
            importDataButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_importDataButtonMouseEntered

    private void importDataButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importDataButtonMouseClicked
        importDataButton.setBackground(new java.awt.Color(0, 0, 0));
        repaint();
        //set gray background again for unchoosen panels
        importDataButtonChoose = true;
        searchMainButtonChoose = false;
        searchMainButtonMouseExited(evt);
        menuButtonChoose = false;
        menuButtonMouseExited(evt);
        exitAppButtonChoose = false;
        exitAppButtonMouseExited(evt);
        trendingButtonChoose = false;
        trendingButtonMouseExited(evt);
        managerButtonChoose = false;
        managerButtonMouseExited(evt);
        dataButtonChoose = false;
        dataButtonMouseExited(evt);
        settingButtonChoose = false;
        settingButtonMouseExited(evt);
        menuItems.setSelectedIndex(3);
    }//GEN-LAST:event_importDataButtonMouseClicked

    private void exitAppButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitAppButtonMouseExited
        if (!exitAppButtonChoose){
            exitAppButton.setBackground(new java.awt.Color(51, 51, 51));
            exitAppButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_exitAppButtonMouseExited

    private void exitAppButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitAppButtonMouseEntered
        if (!exitAppButtonChoose){
            exitAppButton.setBackground(new java.awt.Color(102, 102, 102));
            exitAppButton.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_exitAppButtonMouseEntered

    private void exitAppButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitAppButtonMouseClicked
        exitAppButton.setBackground(new java.awt.Color(0, 0, 0));
        exitAppButton.setVisible(true);
        repaint();
        System.exit(0);
    }//GEN-LAST:event_exitAppButtonMouseClicked

    private void searchTextMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextMainActionPerformed

    private void searchTextMainKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextMainKeyPressed
        currentPage = 1;
        long startTime = System.currentTimeMillis();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER ){
            try {
                //search data in SQL or CSV
                if(SQLSelected){
                    SQL.search(searchTextMain.getText(), dataTable);
                }
                else{
                    RunPython.search(searchTextMain.getText(), smartSearch, searchingResultsTable);
                }
                if(filter){
                    RunPython.run(FilePathsManager.getFilterDataFilePath());
                    CSVHandler.fillTable(searchingResultsTable, FilePathsManager.getTempFilePath());
                }
                time = (System.currentTimeMillis() - startTime)/1000;
                //display searching results
                repaintSearchingDisplay();
                menuItems.setSelectedIndex(7);
            } catch (SQLException | IOException | CsvException ex) {
                Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_searchTextMainKeyPressed

    private void searchTextMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMainMouseClicked
        searchTextMain.setFont(new java.awt.Font("Segoe UI Light", 1, 12));
        searchTextMain.setText("");
    }//GEN-LAST:event_searchTextMainMouseClicked

    private void textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldActionPerformed

    private void searchingResultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchingResultsTableMouseClicked
        JTable tempTable = (JTable) searchingResultsTable;
        Object Text = searchingResultsTable.getValueAt(tempTable.getSelectedRow(), tempTable.getSelectedColumn());
        textField.setText((String)Text);
    }//GEN-LAST:event_searchingResultsTableMouseClicked

    private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
        if(currentPage < searchingResultsTable.getRowCount()/8 ){
            currentPage += 1;
            repaintSearchingDisplay();
            previousButton.setVisible(true);
        }
        else{
            currentPage += 1;
            repaintSearchingDisplay();
            nextButton.setVisible(false);
            repaint();
        }
    }//GEN-LAST:event_nextButtonMouseClicked

    private void previousButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseClicked
        if(currentPage > 2){
            currentPage -= 1;
            repaintSearchingDisplay();
            nextButton.setVisible(true);
        }
        else{
            previousButton.setVisible(false);
            currentPage -= 1;
            repaintSearchingDisplay();
            repaint();
        }
    }//GEN-LAST:event_previousButtonMouseClicked

    private void title1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title1MouseClicked
        dataDisplay(1);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title1MouseClicked

    private void title2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title2MouseClicked
        dataDisplay(2);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title2MouseClicked

    private void title3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title3MouseClicked
        dataDisplay(3);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title3MouseClicked

    private void title4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title4MouseClicked
        dataDisplay(4);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title4MouseClicked

    private void title5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title5MouseClicked
        dataDisplay(5);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title5MouseClicked

    private void title6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title6MouseClicked
        dataDisplay(6);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title6MouseClicked

    private void title7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title7MouseClicked
        dataDisplay(7);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title7MouseClicked

    private void title8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_title8MouseClicked
        dataDisplay(8);
        popupData.pack();
        popupData.setLocationRelativeTo(searchingResultsDisplayBackground);
        popupData.setVisible(true);
    }//GEN-LAST:event_title8MouseClicked

    private void exitPopupDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPopupDataMouseClicked
        popupData.pack();
        popupData.setVisible(false);
    }//GEN-LAST:event_exitPopupDataMouseClicked

    private void startFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startFindActionPerformed

    private void startDateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateInputActionPerformed

    private void endDateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endDateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endDateInputActionPerformed

    private void startFindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startFindMouseClicked
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter(FilePathsManager.getTrendHistoryFilePath()));
            writer.write(startDateInput.getText() + "|" + endDateInput.getText() + "|" + topInput.getText() + "|" + option.getSelectedItem());
            writer.close();
            RunPython.exportTrendingPNG();
            ArrayList<String[]> TrendingData = RunPython.getTredingInformation();
            barChart.clearData();
            for(String[] data : TrendingData){
                String name = data[0];
                double[] values = { Double.parseDouble(data[1])};
                ModelChart model = new ModelChart(name, values);
                barChart.addData(model);
            }
            repaint();
        } catch (IOException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startFindMouseClicked

    private void switchButtonForChooseSearchModeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchButtonForChooseSearchModeMouseClicked
        if(smartSearch){
            smartSearch = false;
            whitePart.setBackground(new Color(0,51,204));
            bluePart.setBackground(new Color(242,242,242));
        }
        else{
            smartSearch = true;
            whitePart.setBackground(new Color(242,242,242));
            bluePart.setBackground(new Color(0,51,204));
        }
        repaint();
    }//GEN-LAST:event_switchButtonForChooseSearchModeMouseClicked

    private void confirmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseExited
        confirmButton.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_confirmButtonMouseExited

    private void confirmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseEntered
        confirmButton.setBackground(new Color(242,242,242));
    }//GEN-LAST:event_confirmButtonMouseEntered

    private void confirmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseClicked
        String categories = categoriesFilterText.getText();
        String tags = tagsFilterText.getText();
        StringBuilder key = new StringBuilder();
        key.append(categories).append(tags);
        if(!"".equals(key.toString())){
            key.deleteCharAt(key.length()-1);
        }
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter(FilePathsManager.getFilterHistoryFilePath()));
            writer.write(key.toString());
            writer.close();
            filter = true;
        } catch (IOException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_confirmButtonMouseClicked

    private void categoriesFilterTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesFilterTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoriesFilterTextActionPerformed

    private void tagsFilterTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tagsFilterTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tagsFilterTextActionPerformed

    private void chooseTagItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chooseTagItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED && chooseTag.getSelectedItem()!=null && filter){
            String tag = chooseTag.getSelectedItem().toString();
            tagsFilterText.setText(tagsFilterText.getText() + "Tags|" + tag + "|");filter = true;
        }
    }//GEN-LAST:event_chooseTagItemStateChanged

    private void chooseTagMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseTagMouseClicked
        // TODO add your handling code here:
        if(!filter){
            filter = true;
        }
    }//GEN-LAST:event_chooseTagMouseClicked

    private void chooseCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseCategoriesMouseClicked
        if(!filter){
            filter = true;
        }
    }//GEN-LAST:event_chooseCategoriesMouseClicked

    private void chooseCategoriesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chooseCategoriesItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED && chooseCategories.getSelectedItem()!=null && filter){
            String tag = chooseCategories.getSelectedItem().toString();
            categoriesFilterText.setText(categoriesFilterText.getText() + "Category|" + tag + "|");
        }
    }//GEN-LAST:event_chooseCategoriesItemStateChanged

    private void loginTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginTextMouseClicked
        loginPane.pack();
        loginPane.setLocationRelativeTo(null);
        if(!(admin || manager)){
            if(!loginPane.isVisible()){
                loginPane.setVisible(true);
            }
            else{
                loginPane.setVisible(false);
            }
        }
    }//GEN-LAST:event_loginTextMouseClicked

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        Login.logout();
        menuItems.setSelectedIndex(0);
        admin = false;
        manager = false;
        loginText.setText("Login");
        importDataButton.setVisible(false);
        managerButton.setVisible(false);
        deleteDataButtonPanel.setVisible(false);
        dataTextLabel.setVisible(false);
        textChangeBox.setVisible(false);
        logoutButton.setVisible(false);
    }//GEN-LAST:event_logoutButtonMouseClicked

    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DashBoard().setVisible(true);
            barChart.addModelLegend("count", Color.YELLOW);
            try {
                if(SQLSelected){
                    SQL.fillTable(dataTable);
                }
                else{
                    CSVHandler.fillTable(dataTable, FilePathsManager.getSaveFilePath());
                }
            } catch (SQLException | IOException | CsvException ex) {
                Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    public void repaintSearchingDisplay(){
                JLabel[] titles = { title1, title2, title3, title4, title5, title6, title7, title8};
                JLabel[] summaries = { summary1, summary2, summary3, summary4, summary5, summary6, summary7, summary8};
                JLabel[] authors = { author1, author2, author3, author4, author5, author6, author7, author8};
                JLabel[] dates = { date1, date2, date3, date4, date5, date6, date7, date8};
                for(int i=0; i<8; i++){
                    int rowIndex = (currentPage-1)*8+i;
                    titles[i].setText("");
                    summaries[i].setText("");
                    authors[i].setText("");
                    dates[i].setText("");
                    if(rowIndex < searchingResultsTable.getRowCount()){
                            titles[i].setText(searchingResultsTable.getValueAt(rowIndex, 5).toString());
                            summaries[i].setText(searchingResultsTable.getValueAt(rowIndex, 4).toString());
                            authors[i].setText("Author: " + searchingResultsTable.getValueAt(rowIndex, 9).toString());
                            dates[i].setText("Date: " + searchingResultsTable.getValueAt(rowIndex, 7).toString());
                    }
                }
                pageNumber.setText(currentPage + "/" + (int)(searchingResultsTable.getRowCount()/8+1));
                if((searchingResultsTable.getRowCount()/8+1) == 1){
                    nextButton.setVisible(false);
                }
                else{
                    nextButton.setVisible(true);
                }
                if(currentPage == 1){
                    previousButton.setVisible(false);
                }
                timeProcessing.setText("About " + searchingResultsTable.getRowCount() + " results (" + time + " seconds)");
                repaint();
    }
    //
    public void dataDisplay(int cardNum){
                int rowIndex = (currentPage-1)*8+cardNum-1;
                titlePopupData.setText("<html>" + searchingResultsTable.getValueAt(rowIndex, 5).toString() + "</html>");
                idPopupData.setText("ID " + searchingResultsTable.getValueAt(rowIndex, 0).toString());
                contentPopupData.setText(searchingResultsTable.getValueAt(rowIndex, 6).toString());
                linkPopupData.setText("Link: " + searchingResultsTable.getValueAt(rowIndex, 1).toString());
                websiteSourcePopupData.setText("Website source: " + searchingResultsTable.getValueAt(rowIndex, 2).toString());
                typePopupData.setText("Type: " + searchingResultsTable.getValueAt(rowIndex, 3).toString());
                tagsPopupData.setText("<html>" + "Tags: " + searchingResultsTable.getValueAt(rowIndex, 8).toString() + "</html>");
                categoryPopupData.setText("<html>" + "category: " + searchingResultsTable.getValueAt(rowIndex, 10).toString() + "</html>");
                summaryPopupData.setText("<html>" + "Summary: " +  searchingResultsTable.getValueAt(rowIndex, 4).toString() + "</html>");
                authorPopupData.setText("Author: " + searchingResultsTable.getValueAt(rowIndex, 9).toString());
                datePopupData.setText("Date: " + searchingResultsTable.getValueAt(rowIndex, 7).toString());
                entitiesPopupData.setText("<html>" + "Entities: " + searchingResultsTable.getValueAt(rowIndex, 11).toString() + "</html>");
                repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addButtonForUser;
    private javax.swing.JLabel addUserLabel;
    private javax.swing.JFrame addUserPane;
    private javax.swing.JPanel addUserPanel;
    private javax.swing.JLabel appName;
    private javax.swing.JLabel author1;
    private javax.swing.JLabel author2;
    private javax.swing.JLabel author3;
    private javax.swing.JLabel author4;
    private javax.swing.JLabel author5;
    private javax.swing.JLabel author6;
    private javax.swing.JLabel author7;
    private javax.swing.JLabel author8;
    private javax.swing.JLabel authorPopupData;
    private hust.soict.dsai.blockchain.shape.SearchBackground background;
    private javax.swing.JPanel backgroundForAddUserPane;
    private hust.soict.dsai.blockchain.graph.panel.PanelShadow backgroundForPopupData;
    private static hust.soict.dsai.blockchain.graph.chart.barchart.BarChart barChart;
    private javax.swing.JPanel bluePart;
    private javax.swing.JTextField categoriesFilterText;
    private javax.swing.JLabel categoriesText;
    private javax.swing.JLabel categoryPopupData;
    private javax.swing.JComboBox<String> chooseCategories;
    private javax.swing.JFileChooser chooseFileToImport;
    private javax.swing.JComboBox<String> chooseTag;
    private javax.swing.JLabel colorNextToName;
    private javax.swing.JPanel colorPanel;
    private javax.swing.JComboBox<String> comboBoxForRole;
    private javax.swing.JLabel confirmAddUserLabel;
    private javax.swing.JPanel confirmButton;
    private javax.swing.JLabel confirmLabel;
    private javax.swing.JTextArea contentPopupData;
    private javax.swing.JScrollPane contentScrollPane;
    public javax.swing.JPanel dataButton;
    private javax.swing.JPanel dataPanel;
    public static javax.swing.JTable dataTable;
    private javax.swing.JScrollPane dataTableSrcollPane;
    public javax.swing.JLabel dataText;
    public javax.swing.JLabel dataTextLabel;
    private javax.swing.JLabel databaseNameText;
    private javax.swing.JTextField databaseNameTextField;
    private javax.swing.JLabel date1;
    private javax.swing.JLabel date2;
    private javax.swing.JLabel date3;
    private javax.swing.JLabel date4;
    private javax.swing.JLabel date5;
    private javax.swing.JLabel date6;
    private javax.swing.JLabel date7;
    private javax.swing.JLabel date8;
    private javax.swing.JLabel datePopupData;
    private javax.swing.JLabel deleteDataButtonLabel;
    public javax.swing.JPanel deleteDataButtonPanel;
    private javax.swing.JLabel deleteUserLabel;
    public javax.swing.JPanel deleteUserPanel;
    private javax.swing.JLabel duplicateUserCaution;
    private javax.swing.JLabel endDate;
    private javax.swing.JTextField endDateInput;
    private javax.swing.JLabel entitiesPopupData;
    private javax.swing.JLabel exactSearchOption;
    private javax.swing.JPanel exitAppButton;
    private javax.swing.JPanel exitButton;
    private javax.swing.JPanel exitButtonForAddUserPane;
    private javax.swing.JLabel exitPopupData;
    private javax.swing.JLabel exitText;
    private javax.swing.JPanel exportToCSVButton;
    private javax.swing.JLabel exportToCSVLabel;
    private javax.swing.JFileChooser fileChooserForInportData;
    private javax.swing.JDialog fileChooserPopup;
    private hust.soict.dsai.blockchain.graph.panel.PanelShadow filterBar;
    private javax.swing.JTextField hostNameTextField;
    private javax.swing.JLabel hostText;
    private javax.swing.JLabel idPopupData;
    private javax.swing.JPanel importData;
    public javax.swing.JPanel importDataButton;
    private javax.swing.JLabel importDataText;
    private hust.soict.dsai.blockchain.graph.panel.PanelShadow inputTrendingPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel linkPopupData;
    private javax.swing.JPanel loadingBackground;
    private javax.swing.JFrame loadingPopup;
    private javax.swing.JPanel loginBackground;
    private javax.swing.JPanel loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JFrame loginPane;
    private javax.swing.JLabel loginText;
    private javax.swing.JLabel logoutButton;
    public javax.swing.JPanel managerButton;
    private javax.swing.JPanel managerPane;
    private javax.swing.JScrollPane managerScrollPane;
    private javax.swing.JLabel managerText;
    public javax.swing.JPanel menu;
    private javax.swing.JPanel menuButton;
    private javax.swing.JTabbedPane menuItems;
    private javax.swing.JPanel menuPane;
    private javax.swing.JLabel menuText;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound nextButton;
    private javax.swing.JLabel nextLabel;
    private javax.swing.JComboBox<String> option;
    private javax.swing.JLabel optionTextLabel;
    private javax.swing.JLabel pageNumber;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound pageNumberButton;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound panelRoundEndDate;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound panelRoundStartDate;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound panelRoundTop;
    private javax.swing.JTextField password;
    private javax.swing.JLabel passwordText;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JLabel passwordTextForAdd;
    private javax.swing.JFrame popupData;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound previousButton;
    private javax.swing.JLabel previousLabel;
    private javax.swing.JProgressBar progressBar;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound resulst2;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound result1;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound result3;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound result4;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound result5;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound result8;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound results6;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound results7;
    private javax.swing.JLabel roleText;
    private hust.soict.dsai.blockchain.graph.panel.PanelRound searchBarMainBackground;
    private javax.swing.JLabel searchIcon;
    public javax.swing.JPanel searchMainButton;
    private javax.swing.JLabel searchMainText;
    private javax.swing.JTextField searchTextMain;
    private javax.swing.JTextField searchTextSub;
    private javax.swing.JPanel searchingPane;
    private hust.soict.dsai.blockchain.shape.MenuBackground searchingPaneBackground;
    private javax.swing.JPanel searchingResultsDisplay;
    private hust.soict.dsai.blockchain.graph.panel.PanelShadow searchingResultsDisplayBackground;
    private javax.swing.JPanel searchingResultsPanel;
    private javax.swing.JScrollPane searchingResultsScrollTablePanelDataPane;
    public static javax.swing.JTable searchingResultsTable;
    private javax.swing.JPanel settingButton;
    private javax.swing.JPanel settingPanel;
    private javax.swing.JLabel settingText;
    private javax.swing.JLabel sideBar;
    private javax.swing.JLabel smartSearchOption;
    private javax.swing.JPanel sqlBlackPart;
    private javax.swing.JPanel sqlInformation;
    private javax.swing.JLabel sqlInformationLabel;
    private javax.swing.JLabel sqlPasswordText;
    private javax.swing.JTextField sqlPasswordTextField;
    private javax.swing.JLabel sqlUsernameText;
    private javax.swing.JPanel sqlWhitePart;
    private javax.swing.JLabel startDate;
    private javax.swing.JTextField startDateInput;
    private javax.swing.JButton startFind;
    private javax.swing.JLabel summary1;
    private javax.swing.JLabel summary2;
    private javax.swing.JLabel summary3;
    private javax.swing.JLabel summary4;
    private javax.swing.JLabel summary5;
    private javax.swing.JLabel summary6;
    private javax.swing.JLabel summary7;
    private javax.swing.JLabel summary8;
    private javax.swing.JLabel summaryPopupData;
    private javax.swing.JPanel switchButtonForChooseSearchMode;
    private javax.swing.JPanel switchButtonForSQL;
    private javax.swing.JTextField tagsFilterText;
    private javax.swing.JLabel tagsPopupData;
    private javax.swing.JLabel tagsText;
    private javax.swing.JLabel text;
    public javax.swing.JTextField textChangeBox;
    private javax.swing.JTextField textField;
    private javax.swing.JLabel textLabel;
    private javax.swing.JLabel timeProcessing;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel title2;
    private javax.swing.JLabel title3;
    private javax.swing.JLabel title4;
    private javax.swing.JLabel title5;
    private javax.swing.JLabel title6;
    private javax.swing.JLabel title7;
    private javax.swing.JLabel title8;
    private javax.swing.JLabel titlePopupData;
    private hust.soict.dsai.blockchain.graph.panel.PanelShadow topBackground;
    private hust.soict.dsai.blockchain.graph.panel.PanelShadow topBackgroundForSearchingResultsPanel;
    private javax.swing.JPanel topBar;
    private javax.swing.JTextField topInput;
    private javax.swing.JLabel topTextLabel;
    private javax.swing.JPanel trendingButton;
    private javax.swing.JPanel trendingPane;
    private javax.swing.JLabel trendingText;
    private javax.swing.JLabel typePopupData;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JTextField username;
    private javax.swing.JLabel usernameText;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel usernameTextForAdd;
    public static javax.swing.JTable usersTable;
    private javax.swing.JLabel waitText;
    private javax.swing.JLabel websiteSourcePopupData;
    private javax.swing.JPanel whitePart;
    private javax.swing.JLabel xCloseButtonLabel;
    // End of variables declaration//GEN-END:variables
}
